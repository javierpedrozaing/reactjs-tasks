{"version":3,"sources":["TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","CreateTodoButton/index.js","ModalForm/index.js","TodoForm/index.js","App.js","reportWebVitals.js","index.js"],"names":["TodoCounter","total","completed","className","TodoSearch","searchValue","setSearchvalue","onChange","e","target","value","placeholder","TodoList","props","children","TodoItem","id","onClick","onComplete","text","onDelete","CreateTodoButton","setShowModal","prevState","ModalForm","ReactDOM","createPortal","document","getElementById","TodoForm","React","useState","newTaskValue","setNewTaskValue","onSubmit","preventDefault","length","addTask","console","log","type","App","defaultTasks","loading","setLoading","error","tasks","setTasks","showModal","completedTasks","filter","task","searchedTasks","taskText","toLowerCase","searchText","includes","updateTasks","newTasks","myNewTasks","JSON","stringify","localStorage","setItem","useEffect","setTimeout","savedTasks","getItem","parse","map","taskId","find","indexTask","findIndex","splice","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","saludo"],"mappings":"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","file":"static/js/main.f77c9733.chunk.js","sourcesContent":["import React from \"react\";\nimport './TodoCounter.css';\n\nfunction TodoCounter({total , completed}) {\n    return(\n        <h2 className=\"TodoCounter\">Has completado {completed} de {total} TODO</h2>  \n    )\n}\n\nexport { TodoCounter }","import React from \"react\";\nimport './TodoSearch.css'\n\nfunction TodoSearch({searchValue, setSearchvalue}) {\n\n    const onSearchValue = (e) => {\n        setSearchvalue(e.target.value);        \n    }\n\n    return(\n        <>\n        <input onChange={onSearchValue} className=\"TodoSearch\" value={searchValue} placeholder=\"Task\"></input>  \n        </>\n    )\n}\n\nexport { TodoSearch }","import React from \"react\";\nimport './TodoList.css';\n\nfunction TodoList(props){ \n    return(\n        <section>\n            <h3>Tasks</h3>\n            <ul>{props.children}</ul>\n        </section>     \n    )\n}\n\nexport { TodoList }","import React from 'react';\nimport './TodoItem.css';\n\nfunction TodoItem(props) {\n \n  return (\n    <li className=\"TodoItem\">\n      <span data-id={props.id} className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n      onClick={props.onComplete}\n      >\n        √\n      </span>\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n        {props.text}\n      </p>\n      <span data-id={props.id} className=\"Icon Icon-delete\" onClick={props.onDelete}>\n        X\n      </span>\n    </li>\n  )\n}\n\nexport { TodoItem }","import React from 'react';\nimport './CreateTodoButton.css';\n\nfunction CreateTodoButton(props) {\n    const newItem = () => {\n        props.setShowModal(prevState => !prevState);\n    };\n\n    return (\n        <button className=\"CreateTodoButton\"\n        onClick={newItem}\n        >+</button>\n    )\n}\n\nexport { CreateTodoButton }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './modal.css';\n\nfunction ModalForm({children}) {\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">\n          {children}\n        </div>,\n        document.getElementById('modal-form')\n      )\n}\n\nexport { ModalForm }","import React from \"react\";\nimport './form.css';\n\nfunction TodoForm(props) {\n    const [newTaskValue, setNewTaskValue] = React.useState(\"\");\n    \n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (newTaskValue.length >= 1) {\n            props.addTask(newTaskValue);\n            props.setShowModal(false);    \n        }\n       \n        \n    }\n\n    const onChange = (e) => {\n        console.log(e.target.value);\n        const text = e.target.value;\n        setNewTaskValue(text);  \n       \n    }\n\n    const onCancel = () => {\n        props.setShowModal(false);\n    }\n\n    return (\n        <form onSubmit={onSubmit} >\n            <label>Escribe tu nueva tarea</label>\n            <textarea\n                value = {newTaskValue}\n                onChange = {onChange}\n                placeholder = \"Escribe una nueva tarea\"\n            />\n            <div className=\"TodoForm-buttonContainer\">\n                <button\n                type=\"button\"\n                className=\"TodoForm-button TodoForm-button-cancel\"\n                onClick = {onCancel}\n                >\n                Cancelar\n                </button>\n\n                <button\n                className=\"TodoForm-button TodoForm-button-add\"\n                type= \"submit\"\n                >\n                Añadir\n                </button>\n            </div>\n        </form>\n    )\n}\n\nexport { TodoForm }","import './App.css';\nimport React from 'react';\nimport { TodoCounter } from './TodoCounter/';\nimport { TodoSearch } from './TodoSearch/';\nimport { TodoList } from './TodoList/';\nimport { TodoItem } from './TodoItem/';\nimport { CreateTodoButton } from './CreateTodoButton/';\nimport { ModalForm } from './ModalForm/';\n\nimport { TodoForm } from './TodoForm';\n\nfunction App(props) {\n  \n  let defaultTasks = [];\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(false);\n  const [tasks, setTasks] = React.useState(defaultTasks);\n  const [showModal, setShowModal] = React.useState(false);\n  const [searchValue, setSearchvalue] = React.useState('');\n\n  const completedTasks = tasks.filter(task => !!task.completed).length;\n  const total = tasks.length;\n\n  let searchedTasks = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTasks = tasks;\n  } else {\n    searchedTasks = tasks.filter(task => {\n      const taskText =  task.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return taskText.includes(searchText);\n    })\n  }\n\n  const updateTasks = (newTasks) => {\n    const myNewTasks = JSON.stringify(newTasks);\n    localStorage.setItem(\"myTasks\", myNewTasks);\n    setTasks(newTasks);\n  }\n\n  const onComplete = (taskId) => {     \n    const newTasks = [...tasks];   \n    const myTask = newTasks.find((task) => task.id === taskId);\n    myTask.completed = true; \n    updateTasks(newTasks);    \n  }\n\n  const onDelete = (taskId) => {\n    const newTasks = [...tasks];\n    const indexTask = newTasks.findIndex((task) => task.id === taskId);\n    newTasks.splice(indexTask, 1);\n    updateTasks(newTasks);\n  }\n\n  const addTask = (task) => {\n    console.log(\"task===> \", task);\n    const newTasks = [...tasks];\n    newTasks.push({\n      completed: false,\n      text: task\n    });\n    updateTasks(newTasks);\n  }\n\n\n  React.useEffect(() => { \n    \n    setTimeout(() => {\n      let savedTasks = localStorage.getItem(\"myTasks\");    \n\n      if (!savedTasks){\n        localStorage.setItem(\"myTasks\", []);\n      } else {    \n          defaultTasks = JSON.parse(savedTasks);\n          setTasks(defaultTasks);\n          (defaultTasks) ? setLoading(false) : setLoading(true);    \n      }\n    }, 1500);\n  \n\n  }, []);\n\n  return (\n<>\n      <TodoCounter total={total} completed={completedTasks} />\n      <TodoSearch searchValue={searchValue} setSearchvalue={setSearchvalue}/>\n      <TodoList>\n        {error && <p>Hubo un error</p>}\n        {loading && <p>Cargando...</p>}\n        {(!loading && !searchedTasks.length) && <p>Crea tu primer tarea</p>}\n\n        {searchedTasks.map((task) => {\n        return  <TodoItem onComplete={() => onComplete(task.id)} onDelete={() => onDelete(task.id)} key={task.text} text={task.text} completed={task.completed} />\n        })} \n      </TodoList>\n      <CreateTodoButton setShowModal={setShowModal} showModal={showModal}/>        \n      {showModal &&\n      (\n          <ModalForm>\n            <TodoForm setShowModal={setShowModal} addTask={(task) => addTask(task)}></TodoForm>\n         </ModalForm>\n      )}\n   \n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ModalForm } from './ModalForm/';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App saludo=\"Hola\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}